<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">


	<!-- spring MVC annotation(주석문)을 활성화를 위한 설정 -->
	<context:annotation-config/>

	<!-- viewResolver 설정(사용자의 views 위치, 확장자명 설정) 
	 tiles에선 이걸 사용하지 않는다.   xml에서 객체를 생성할 때 bean태그를 쓴다.
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver"> 
		<property name="prefix" value="/WEB-INF/views/"/>	경로
		<property name="suffix" value=".jsp"/>				확장자명
	</bean> -->
	 
	 
	 
	<!-- tiles 설정  -->
	 <bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
	 	<property name="definitions">
	 		<list>
	 			<value>/WEB-INF/views/layouts.xml</value>
	 		</list>
	 	</property>
	 </bean>
	 
	 <bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
	 	<property name="requestContextAttribute" value="requestContext"/>
	 	<property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"/>
	 </bean>    
	 
	 
	 
	<!-- Java 공통 Package 설정 -->
	<context:component-scan base-package="kh.com.a"/>
	
	<!-- ajax사용하기위해 -->
	<!-- 주석문의 사용 허가 -->
	<mvc:annotation-driven/>
	
	<!-- Spring에서 처리할 수 없는 요청은 tomcat에 위임 -->
	<mvc:default-servlet-handler/>
	
	<!-- file upload 셋팅 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="104857600"/>	<!-- 업로드 기본사이즈 1MB -->
		<property name="maxInMemorySize" value="102400"/>	<!--  -->
		<property name="defaultEncoding" value="utf-8"/>	<!-- 인코딩 방식 utf-8 -->
		<property name="uploadTempDir" value="upload"/>		<!-- WebContent에 upload폴더가 있어야 한다. -->
	</bean>
	
	
	<!-- file download 셋팅  -->
	<bean id="downloadView" class="kh.com.a.util.DownloadView"/>
	<bean id="downloadViewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<property name="order">
			<value>0</value>
		</property>
	</bean> 

	<!-- 메일 설정 -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com"/>
		<property name="port" value="587"/>
		<property name="username" value="khaclass190612@gmail.com"/>
		<property name="password" value="kha190612"/>
		<property name="javaMailProperties">
			<props>
				<prop key="mail.transport.protocol">smtp</prop>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.debug">true</prop>
			</props>
		</property>
	</bean>
 
 	<!-- ajax 배열 설정 -->
	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html; charset=UTF-8</value>
					</list>
				</property>
			
			</bean>
			
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>application/json; charset=UTF-8</value>
						<value>application/String; charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	
	<!-- NaverLoginBO class에 대한 bean설정 추가 -->
	<bean id="naverLoginBO" class="kh.com.a.util.NaverLoginBO"/>
	
	<!-- SockJS관련 빈등록 -->
	<!-- <bean id="echoHandler" class="kh.com.a.ws.EchoHandler" />
	<websocket:handlers>
		<websocket:mapping handler="echoHandler" path="/echo"/>
		<websocket:sockjs/>
	</websocket:handlers> -->

</beans>
